version: '3.9'
services:
 ## Nginx Proxy
 proxy:
  container_name: proxy
  image: nginx:alpine
  volumes:
   - ./nginx/nginx.conf:/etc/nginx/nginx.conf
   - ./nginx/certs.conf:/etc/nginx/certs.conf
   - ./nginx/.htpasswd:/etc/nginx/.htpasswd
   - ../certificates/:/etc/nginx/certs
  ports:
   - '80:80'
   - '443:443'
  restart: always
  depends_on:
   - backend
   - frontend
   - neo4j

 ## Vue (Nginx) Frontend
 frontend:
  container_name: frontend_prod
  image: ghcr.io/thm-graphs/atag-editor-frontend:latest
  restart: always
  depends_on:
   - backend
  ports:
   - '3000:3000'

 ## NodeJS-Express Backend
 backend:
  container_name: backend_prod
  image: ghcr.io/thm-graphs/atag-editor-backend:latest
  # ports:
  #  - '8080:8080'
  restart: always
  volumes:
   - ../certificates/:/app/certificates
  environment:
   - APP_HOST=${APP_HOST}
   - APP_PORT=${APP_PORT}
   - NEO4J_URI=${NEO4J_URI}
   - NEO4J_USER=${NEO4J_USER}
   - NEO4J_PW=${NEO4J_PW}
   - NODE_ENV=${NODE_ENV}
   - PROTOCOL=${PROTOCOL}
  depends_on:
   - neo4j

  # Neo4j Database
 neo4j:
  container_name: neo4j
  image: neo4j:5.19
  restart: unless-stopped
  ports:
   - 7473:7473
   - 7474:7474
   - 7687:7687
  volumes:
   - ./neo4j/plugins:/var/lib/neo4j/plugins
   - ./neo4j/backups:/var/lib/neo4j/backups
   - ./neo4j/data:/var/lib/neo4j/data
   - ../certificates/:/var/lib/neo4j/certificates
  environment:
   NEO4J_AUTH: ${NEO4J_USER}/${NEO4J_PW}
   NEO4J_PLUGINS: '["apoc", "apoc-extended"]'
   NEO4J_server_memory_pagecache_size: '1G'
   NEO4J_server_memory_heap_max__size: '2G'
   NEO4J_server_default__advertised__address: '${APP_HOST}'
   NEO4J_dbms_ssl_policy_bolt_enabled: 'true'
   NEO4J_dbms_ssl_policy_bolt_base__directory: 'certificates'
   NEO4J_dbms_ssl_policy_bolt_private__key: 'private.key'
   NEO4J_dbms_ssl_policy_bolt_public__certificate: 'public.crt'
   NEO4J_dbms_ssl_policy_bolt_client__auth: 'NONE'
   NEO4J_server_bolt_tls__level: 'REQUIRED'
   NEO4J_server_https_enabled: 'true'
   NEO4J_dbms_ssl_policy_https_enabled: 'true'
   NEO4J_dbms_ssl_policy_https_base__directory: 'certificates'
   NEO4J_dbms_ssl_policy_https_private__key: 'private.key'
   NEO4J_dbms_ssl_policy_https_public__certificate: 'public.crt'
   NEO4J_dbms_ssl_policy_https_client__auth: 'NONE'
   NEO4J_server_bolt_listen__address: '0.0.0.0:7687'
   NEO4J_server_https_listen__address: '0.0.0.0:7473'
   NEO4J_server_bolt_advertised__address: '${APP_HOST}:${APP_PORT}'
   apoc.initializer.neo4j.0: CREATE CONSTRAINT collection_uuid IF NOT EXISTS FOR (c:Collection) REQUIRE c.uuid IS UNIQUE
   apoc.initializer.neo4j.1: CREATE CONSTRAINT character_uuid IF NOT EXISTS FOR (ch:Character) REQUIRE ch.uuid IS UNIQUE
   apoc.initializer.neo4j.2: CREATE CONSTRAINT annotation_uuid IF NOT EXISTS FOR (a:Annotation) REQUIRE a.uuid IS UNIQUE
